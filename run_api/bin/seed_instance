#!/usr/bin/env python

import uuid
import asyncio
import argparse
from loguru import logger
from run_api.database import SessionLocal
from run_api.user.schemas import User
from run_api.api_key.schemas import APIKey
from run_api.chute.schemas import Chute
from run_api.image.schemas import Image
from run_api.instance.schemas import Instance


async def main():
    """
    Seed an instance locally.
    """
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--host",
        type=str,
        help="host address",
        default="vllm",
    )
    parser.add_argument(
        "--port",
        type=int,
        help="Port",
        default=8101
    )
    parser.add_argument(
        "--chute-id",
        type=str,
        help="Chute ID",
        default="135c0f80-7e3c-5cdf-9c1b-c1ae36c9dc66"
    )

    args = parser.parse_args()
    async with SessionLocal() as session:
        instance = Instance(
            instance_id=str(uuid.uuid4()),
            host=args.host,
            port=args.port,
            chute_id=args.chute_id,
            gpus=[{"name": "Fake Nvidia A12345", "memory": 123123123123123}],
            miner_uid=0,
            miner_hotkey="fake-hotkey",
            miner_coldkey="fake-coldkey",
            region="n/a",
            active=True,
            verified=True,
        )
        session.add(instance)
        await session.commit()
    logger.success(
        f"Successfully added instance with instance_id={instance.instance_id}"
    )


if __name__ == "__main__":
    asyncio.run(main())
