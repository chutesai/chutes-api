apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    {{- include "api.labels" . | nindent 4 }}
    {{- if .Values.datadog_enabled }}
    tags.datadoghq.com/env: chutes-prod
    tags.datadoghq.com/service: api
    tags.datadoghq.com/version: 0.0.1
    {{- end }}
spec:
  replicas: {{ .Values.api.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 3
  selector:
    matchLabels:
      {{- include "api.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "api.labels" . | nindent 8 }}
        {{- if .Values.datadog_enabled }}
        tags.datadoghq.com/env: chutes-prod
        tags.datadoghq.com/service: api
        tags.datadoghq.com/version: 0.0.1
        admission.datadoghq.com/enabled: "true"
        {{- end }}
      {{- if .Values.datadog_enabled }}
      annotations:
        admission.datadoghq.com/python-lib.version: v2.20.0
      {{- end }}
    spec:
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.squad_enabled }}
      volumes:
        - name: squad-certs
          secret:
            secretName: squad-cert
            items:
              - key: squad_pub.pem
                path: squad_pub.pem
      {{- end }}
      containers:
        - name: api
          image: "{{ .Values.api.image }}"
          imagePullPolicy: {{ .Values.api.imagePullPolicy }}
          command: ["poetry", "run", "uvicorn", "api.main:app", "--host", "0.0.0.0", "--port", "{{ .Values.api.service.targetPort }}", "--workers", "{{ .Values.api.resources.limits.cpu }}", "--limit-concurrency", "2048", "--limit-max-requests", "1000"]
          env:
            {{- include "chutes.sensitiveEnv" . | nindent 12 }}
            {{- include "chutes.commonEnv" . | nindent 12 }}
            {{- if .Values.datadog_enabled }}
            - name: DD_LOGS_INJECTION
              value: "true"
            {{- end }}
            - name: MEMCACHED
              value: memcached
            - name: VALIDATOR_HOTKEYS
              value: {{ join "," .Values.validators | quote }}
            - name: SUBNET_OWNER_HOTKEYS
              value: {{ join "," .Values.subnet_owners | quote }}
            - name: FIRST_PAYMENT_BONUS
              value: "{{ .Values.account_settings.first_payment_bonus.bonus }}"
            - name: FIRST_PAYMENT_BONUS_THRESHOLD
              value: "{{ .Values.account_settings.first_payment_bonus.threshold }}"
            - name: ALL_ACCOUNTS_FREE
              value: "{{ .Values.account_settings.all_accounts_free }}"
            - name: DEVELOPER_DEPOSIT
              value: "{{ .Values.account_settings.developer_deposit }}"
            - name: CONSECUTIVE_FAILURE_LIMIT
              value: "{{ .Values.consecutive_failure_limit }}"
            {{- if .Values.squad_enabled }}
            - name: SQUAD_CERT_PATH
              value: /etc/squad/squad_pub.pem
            {{- end }}
          {{- if .Values.squad_enabled }}
          volumeMounts:
            - name: squad-certs
              mountPath: "/etc/squad"
              readOnly: true
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.api.service.targetPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: {{ .Values.api.livenessProbe.initialDelaySeconds | default 30 }}
            periodSeconds: {{ .Values.api.livenessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.api.livenessProbe.timeoutSeconds | default 5 }}
            successThreshold: {{ .Values.api.livenessProbe.successThreshold | default 1 }}
            failureThreshold: {{ .Values.api.livenessProbe.failureThreshold | default 3 }}
          readinessProbe:
            httpGet:
              path: /ping
              port: http
            initialDelaySeconds: {{ .Values.api.readinessProbe.initialDelaySeconds | default 10 }}
            periodSeconds: {{ .Values.api.readinessProbe.periodSeconds | default 10 }}
            timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds | default 5 }}
            successThreshold: {{ .Values.api.readinessProbe.successThreshold | default 1 }}
            failureThreshold: {{ .Values.api.readinessProbe.failureThreshold | default 3 }}
          resources:
            {{- toYaml .Values.api.resources | nindent 12 }}
