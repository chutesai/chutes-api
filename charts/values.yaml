account_settings:
  first_payment_bonus:
    threshold: 100.00
    bonus: 25.00
  all_accounts_free: false
  developer_deposit: 5000.00

squad_enabled: true

chutes_version: 0.2.42

consecutive_failure_limit: 7

datadog_enabled: false

api:
  replicaCount: 12
  image: parachutes/validator:latest
  imagePullPolicy: Always
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  resources:
    requests:
      cpu: "4"
      memory: "20Gi"
    limits:
      cpu: "4"
      memory: "20Gi"
  service:
    type: NodePort
    nodePort: 32000
    port: 8000
    targetPort: 8000
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - api
          topologyKey: kubernetes.io/hostname
  tolerations: []

socket:
  image: parachutes/validator:latest
  imagePullPolicy: Always
  replicaCount: 2
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  service:
    type: NodePort
    nodePort: 32001
    port: 8000
    targetPort: 8000
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - socket
          topologyKey: kubernetes.io/hostname
  tolerations: []

eventSocket:
  image: parachutes/validator:latest
  imagePullPolicy: Always
  replicaCount: 1
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  service:
    type: NodePort
    nodePort: 32004
    port: 8000
    targetPort: 8000
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - event-socket
          topologyKey: kubernetes.io/hostname
  tolerations: []

forge:
  replicaCount: 4
  image: parachutes/forge:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "8"
      memory: "32Gi"
    limits:
      cpu: "8"
      memory: "32Gi"
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - forge
          topologyKey: kubernetes.io/hostname
  tolerations: []

gravalWorker:
  replicaCount: 16
  image: parachutes/validator:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "1"
      memory: "1Gi"
    limits:
      cpu: "1"
      memory: "1Gi"
  affinity:
    nodeAffinity: {}
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - graval-worker
          topologyKey: kubernetes.io/hostname
  tolerations: []

watchtower:
  replicaCount: 1
  image: parachutes/validator:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  affinity: {}
  tolerations: []


cacher:
  image: parachutes/validator:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  affinity: {}
  tolerations: []

chuteAutoscaler:
  image: parachutes/validator:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  affinity: {}
  tolerations: []

paymentWatcher:
  image: parachutes/validator:latest
  imagePullPolicy: Always
  subtensor: wss://entrypoint-finney.opentensor.ai
  recovery_blocks: 500
  livenessProbe:
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readinessProbe:
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  resources:
    requests:
      cpu: "1"
      memory: "8Gi"
    limits:
      cpu: "1"
      memory: "8Gi"
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
  tolerations: []

usageTracker:
  enabled: true
  image: parachutes/validator:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "1"
      memory: "2Gi"
    limits:
      cpu: "1"
      memory: "2Gi"
  nodeSelector: {}
  affinity: {}
  tolerations: []

metasync:
  enabled: true
  replicaCount: 1
  image: parachutes/metasync:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "1"
      memory: "512Mi"
    limits:
      cpu: "1"
      memory: "512Mi"
  subtensor: wss://entrypoint-finney.opentensor.ai
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
  tolerations: []

weightsetter:
  replicaCount: 1
  enabled: true
  image: parachutes/metasync:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "1"
      memory: "512Mi"
    limits:
      cpu: "1"
      memory: "512Mi"
  subtensor: wss://entrypoint-finney.opentensor.ai
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
  tolerations: []

redis:
  image: redis:7
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
  tolerations: []
  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 1
      memory: 1Gi
  service:
    type: ClusterIP
    port: 6379
  config:
    customArgs: []

cmRedis:
  shard_count: 1
  image: redis:7
  imagePullPolicy: IfNotPresent
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
  tolerations: []
  resources:
    requests:
      cpu: 1
      memory: 2Gi
    limits:
      cpu: 1
      memory: 2Gi
  service:
    type: ClusterIP
    port: 6379
  config:
    customArgs: []

quotaRedis:
  redis:
  image: redis:7
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  nodeSelector: {}
  affinity: {}
  tolerations: []
  resources:
    requests:
      cpu: 2
      memory: 8Gi
    limits:
      cpu: 2
      memory: 8Gi
  service:
    type: ClusterIP
    port: 6379
  config:
    customArgs: []

registry:
  image: registry:2
  imagePullPolicy: IfNotPresent
  replicaCount: 2
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
  tolerations: []
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 512Mi
  service:
    type: ClusterIP
    port: 5000
  config:
    redirectDisable: false
    type: "gcs"

registryProxy:
  image: nginx:1.27
  imagePullPolicy: IfNotPresent
  config:
    workerProcesses: 64
    workerConnections: 4096
    accessLogPath: "/var/log/nginx/access.log"
  replicaCount: 2
  nodeSelector: {}
  affinity:
    nodeAffinity: {}
  tolerations: []
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 512Mi
  service:
    type: NodePort
    port: 5000
    nodePort: 32003
    targetPort: 5000

auditExporter:
  enabled: true
  image: parachutes/validator:latest
  nodeSelector:
    kubernetes.io/hostname: chutes-prod-0

failedChuteCleanup:
  enabled: true
  image: parachutes/validator:latest
  nodeSelector:
    kubernetes.io/hostname: chutes-prod-0

memcached:
  image: memcached:1.6.34
  imagePullPolicy: IfNotPresent
  replicaCount: 1
  nodeSelector: {}
  affinity: {}
  tolerations: []
  resources:
    requests:
      cpu: 1
      memory: 1Gi
    limits:
      cpu: 1
      memory: 1Gi
  service:
    type: ClusterIP
    port: 11211
  config:
    memory_mb: 800

autostaker:
  enabled: true
  replicaCount: 2
  image: parachutes/validator:latest
  imagePullPolicy: Always
  resources:
    requests:
      cpu: "1"
      memory: "4Gi"
    limits:
      cpu: "1"
      memory: "4Gi"
  affinity:
    nodeAffinity: {}
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - autostaker
          topologyKey: kubernetes.io/hostname
  tolerations: []
