services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: chutes
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - chutes

  redis:
    image: redis:7
    ports:
      - "127.0.0.1:6379:6379"
    command: ["redis-server", "--requirepass", "redispassword"]
    environment:
      - REDIS_PASSWORD=redispassword
    restart: always
    networks:
      - chutes

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_STORAGE_CLASS_REDIRECT_DISABLE: "true"
    entrypoint: ''
    command: bash -c 'mkdir -p /data/chutes && minio server /data'
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    restart: always
    networks:
      - chutes

  registry:
    image: registry:2
    environment:
      REGISTRY_STORAGE: s3
      REGISTRY_STORAGE_S3_REGION: local
      REGISTRY_STORAGE_S3_BUCKET: chutes
      REGISTRY_STORAGE_S3_ACCESSKEY: minioadmin
      REGISTRY_STORAGE_S3_SECRETKEY: minioadmin
      REGISTRY_STORAGE_S3_REGIONENDPOINT: http://minio:9000
      REGISTRY_HTTP_SECRET: "registry"
      REGISTRY_STORAGE_REDIRECT_DISABLE: "true"
    restart: always
    depends_on:
      - minio
    networks:
      - chutes

  registry_public:
    image: nginx
    ports:
      - "5000:5100"
    volumes:
      - ./data/registry-auth-nginx.conf:/etc/nginx/nginx.conf
    restart: always
    networks:
      - chutes

  api:
    build:
      context: .
      target: api
    volumes:
      - ./metasync:/app/metasync
      - ./api:/app/api
      - ./data:/app/data
      - kube_config:/home/chutes/.kube
    environment:
      - POSTGRESQL=postgresql+asyncpg://user:password@postgres:5432/chutes
      - REDIS_URL=redis://:redispassword@redis:6379/0
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_REGION=us-east-1
      - STORAGE_BUCKET=chutes
      - REGISTRY_PASSWORD=registry
      - REGISTRY_INSECURE=true
      - VALIDATOR_SS58=5DCJTfVx3ReNyxW3SgQEKFgvXFuqnK3BNW1vMhTQK4jdZbV4
      - VALIDATOR_SEED=971c2a6674d0861ade72297d11110ce21c93734210527c8f4c9190c00139ce20
      # XXX uncomment to test the graval encryption, requires GPU and to be started from docker-compose-gpu.yaml
      - GRAVAL_URL=http://graval:9191
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - minio
      - registry
    networks:
      - chutes

  socket:
    build:
      context: .
      target: api
    entrypoint: ["poetry", "run", "uvicorn", "api.socket_server:app", "--host", "0.0.0.0", "--port", "8080", "--reload"]
    volumes:
      - ./metasync:/app/metasync
      - ./api:/app/api
      - ./data:/app/data
      - kube_config:/home/chutes/.kube
    environment:
      - POSTGRESQL=postgresql+asyncpg://user:password@postgres:5432/chutes
      - REDIS_URL=redis://:redispassword@redis:6379/0
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_REGION=us-east-1
      - STORAGE_BUCKET=chutes
      - REGISTRY_PASSWORD=registry
      - REGISTRY_INSECURE=true
      - VALIDATOR_SS58=5DCJTfVx3ReNyxW3SgQEKFgvXFuqnK3BNW1vMhTQK4jdZbV4
      - VALIDATOR_SEED=971c2a6674d0861ade72297d11110ce21c93734210527c8f4c9190c00139ce20
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - minio
      - registry
    networks:
      - chutes

  events_socket:
    build:
      context: .
      target: api
    entrypoint: ["poetry", "run", "uvicorn", "api.event_socket_server:app", "--host", "0.0.0.0", "--port", "8081", "--reload"]
    volumes:
      - ./metasync:/app/metasync
      - ./api:/app/api
      - ./data:/app/data
      - kube_config:/home/chutes/.kube
    environment:
      - POSTGRESQL=postgresql+asyncpg://user:password@postgres:5432/chutes
      - REDIS_URL=redis://:redispassword@redis:6379/0
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_REGION=us-east-1
      - STORAGE_BUCKET=chutes
      - REGISTRY_PASSWORD=registry
      - REGISTRY_INSECURE=true
      - VALIDATOR_SS58=5DCJTfVx3ReNyxW3SgQEKFgvXFuqnK3BNW1vMhTQK4jdZbV4
      - VALIDATOR_SEED=971c2a6674d0861ade72297d11110ce21c93734210527c8f4c9190c00139ce20
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis
      - minio
      - registry
    networks:
      - chutes

  payment_watcher:
    build:
      context: .
      target: api
    volumes:
      - ./api:/app/api
      - kube_config:/home/chutes/.kube
    environment:
      - POSTGRESQL=postgresql+asyncpg://user:password@postgres:5432/chutes
      - REDIS_URL=redis://:redispassword@redis:6379/0
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_REGION=us-east-1
      - STORAGE_BUCKET=chutes
      - REGISTRY_PASSWORD=registry
      - REGISTRY_INSECURE=true
    entrypoint: ["poetry", "run", "uvicorn", "api.payment.watcher:app", "--host", "0.0.0.0", "--port", "8222", "--reload"]
    ports:
      - "8222:8222"
    restart: always
    depends_on:
      - postgres
      - redis
      - minio
      - registry
    networks:
      - chutes

  forge:
    build:
      context: .
      target: forge
    environment:
      - POSTGRESQL=postgresql+asyncpg://user:password@postgres:5432/chutes
      - REDIS_URL=redis://:redispassword@redis:6379/0
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_ENDPOINT_URL=http://minio:9000
      - AWS_REGION=us-east-1
      - STORAGE_BUCKET=chutes
      - REGISTRY_PASSWORD=registry
      - REGISTRY_INSECURE=true
      - PYTHONPATH=/forge

      # Environment variables specific to buildah
      - STORAGE_DRIVER=vfs
      - BUILDAH_FORMAT=docker
      - BUILDAH_ISOLATION=chroot
    depends_on:
      - postgres
      - redis
      - minio
      - registry
    cap_add:
      - SETUID
      - SETGID
      - SYS_ADMIN
    restart: always
    security_opt:
      - seccomp:./data/forge-seccomp.json
      - apparmor:unconfined
      - label:disable
    networks:
      - chutes

  metasync:
    build:
      context: .
      target: metasync
    volumes:
      - ./metasync:/app/metasync
    environment:
      - POSTGRESQL=postgresql+asyncpg://user:password@postgres:5432/chutes
      - REDIS_URL=redis://:redispassword@redis:6379/0
    restart: always
    depends_on:
      - postgres
      - redis
    networks:
      - chutes

volumes:
  postgres_data:
  minio_data:
  kube_config:

networks:
  chutes:
    external: true
    name: chutes
