apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Release.Name }}-forge
  labels:
    app: {{ $.Release.Name }}-forge
spec:
  replicas: {{ $.Values.chutes_forge.replicas }}
  selector:
    matchLabels:
      app: {{ $.Release.Name }}-forge
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      labels:
        app: {{ $.Release.Name }}-forge
      annotations:
        prometheus.io/scrape: {{ $.Values.chutes_registry.prometheus_scrape | toString | quote }}
        prometheus.io/path: {{ $.Values.chutes_registry.prometheus_path }}
        prometheus.io/port: {{ $.Values.chutes_registry.prometheus_port | toString | quote }}
    spec:
      restartPolicy: {{ $.Values.chutes_forge.restart_policy }}
      containers:
        - name: {{ $.Release.Name }}-forge
          image: "{{ $.Values.chutes_forge.image_url }}:{{ $.Values.chutes_api.image_tag }}"
          imagePullPolicy: {{ $.Values.chutes_forge.image_pull_policy }}
          resources:
            limits:
              cpu: {{ $.Values.chutes_forge.max_cpu }}
              memory: {{ $.Values.chutes_forge.max_mem }}
          envFrom:
            - secretRef:
                name: {{ $.Release.Name }}-forge
          ports:
            - name: http
              containerPort: {{ $.Values.chutes_forge.http_port | toString }}
          livenessProbe:
            tcpSocket:
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3
            periodSeconds: 10